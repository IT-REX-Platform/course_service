type Mutation {
    """
    Creates a new course with the given input and returns the created course.
    """
    createCourse(input: CreateCourseInput!): Course!

    """
    Creates a new chapter with the given input and returns the created chapter.
    The course id must be a course id of an existing course.
    ğŸ”’ The user must be an admin in this course to perform this action.
    """
    createChapter(input: CreateChapterInput!): Chapter!

    """
    Updates an existing course with the given input and returns the updated course.
    The course id must be a course id of an existing course.
    ğŸ”’ The user must be an admin in this course to perform this action.
    """
    updateCourse(input: UpdateCourseInput!): Course!

    """
    Updates an existing chapter with the given input and returns the updated chapter.
    The chapter id must be a chapter id of an existing chapter.
    ğŸ”’ The user must be an admin in this course to perform this action.
    """
    updateChapter(input: UpdateChapterInput!): Chapter!

    """
    Deletes an existing course, throws an error if no course with the given id exists.
    ğŸ”’ The user must be an admin in this course to perform this action.
    """
    deleteCourse(id: UUID!): UUID!

    """
    Deletes an existing chapter, throws an error if no chapter with the given id exists.
    ğŸ”’ The user must be an admin in this course to perform this action.
    """
    deleteChapter(id: UUID!): UUID!

    """
    Lets the current user join a course as a student.
    """
    joinCourse(courseId: UUID!): CourseMembership!

    """
    Adds the specified user to the specified course with the specified role.
    ğŸ”’ The calling user must be an admin in this course to perform this action.
    """
    createMembership(input: CourseMembershipInput!): CourseMembership!

    """
    Updates a user's membership in a course with the given input.
    ğŸ”’ The calling user must be an admin in this course to perform this action.
    """
    updateMembership(input: CourseMembershipInput!): CourseMembership!

    """
    Removes the specified user's access to the specified course.
    ğŸ”’ The calling user must be an admin in this course to perform this action.
    """
    deleteMembership(input: CourseMembershipInput!): CourseMembership!
}